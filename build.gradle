buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath BuildScriptDependencies.BUILD_TOOLS_GRADLE
        classpath BuildScriptDependencies.KOTLIN_GRADLE
        classpath BuildScriptDependencies.DEXCOUNT_GRADLE
        classpath BuildScriptDependencies.VERSIONS_GRADLE // allows checking for new versions with './gradlew dependencyUpdates -Drevision=release'
    }
}

apply plugin: 'com.github.ben-manes.versions'

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    // Injected Variables
    MAJOR_VERSION = project.hasProperty("major") ? Integer.parseInt(major) : 0
    MINOR_VERSION = project.hasProperty("minor") ? Integer.parseInt(minor) : 7
    HOTFIX_VERSION = project.hasProperty("hotfix") ? Integer.parseInt(hotfix) : 4
    BUILD_NUMBER = project.hasProperty("build") ? Integer.parseInt(build) % 1000 : 0

    if (MAJOR_VERSION < 0 || MAJOR_VERSION > 99) {
        throw new IllegalArgumentException('major must be 0-99')
    }
    if (MINOR_VERSION < 0 || MINOR_VERSION > 99) {
        throw new IllegalArgumentException('minor must be 0-99')
    }
    if (HOTFIX_VERSION < 0 || HOTFIX_VERSION > 99) {
        throw new IllegalArgumentException('hotfix must be 0-99')
    }
    if (BUILD_NUMBER < 0) {
        throw new IllegalArgumentException('build must be 0 or bigger')
    }

    VERSIONCODE = MAJOR_VERSION * 10000000 + MINOR_VERSION * 100000 + HOTFIX_VERSION * 1000 + BUILD_NUMBER
    VERSIONNAME = "$MAJOR_VERSION.$MINOR_VERSION.$HOTFIX_VERSION.$BUILD_NUMBER"

    println "##### (Injected) variables #####"
    println "MAJOR: " + MAJOR_VERSION
    println "MINOR: " + MINOR_VERSION
    println "HOTFIX: " + HOTFIX_VERSION
    println "BUILD: " + BUILD_NUMBER
    println "VERSIONCODE: " + VERSIONCODE
    println "VERSIONNAME: " + VERSIONNAME
}
